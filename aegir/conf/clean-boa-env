#!/bin/bash

### BEGIN INIT INFO
# Provides:          clean-boa-env
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: safeguard to remove auto-healing pid files after reboot etc.
# Description:       safeguard to remove auto-healing pid files after reboot etc.
### END INIT INFO

PATH=/usr/local/bin:/usr/local/sbin:/opt/local/bin:/usr/bin:/usr/sbin:/bin:/sbin
NAME=clean-boa-env
DESC=clean-boa-env
PIDFILE=/var/run/clean-boa-env.pid

set -e

case "$1" in
  start)
    if [ -e "/root/.run-to-chimaera.cnf" ]; then
      if [ -x "/opt/local/bin/autochimaera" ]; then
        bash /opt/local/bin/autochimaera > /dev/null 2>&1 &
      fi
    fi
    if [ -e "/root/.run-to-beowulf.cnf" ]; then
      if [ -x "/opt/local/bin/autobeowulf" ]; then
        bash /opt/local/bin/autobeowulf > /dev/null 2>&1 &
      fi
    fi
    echo -n "Starting $DESC: "
    if [ -x "/bin/websh" ] && [ -L "/bin/sh" ]; then
      _WEB_SH=`readlink -n /bin/sh`
      _WEB_SH=`echo -n ${_WEB_SH} | tr -d "\n"`
      if [ -x "/bin/dash" ] || [ -x "/usr/bin/dash" ]; then
        if [ "${_WEB_SH}" != "/bin/dash" ]; then
          if [ -x "/usr/bin/dash" ] && [ ! -L "/usr/bin/dash" ]; then
            if [ -L "/usr/bin/sh" ]; then
              rm -f /usr/bin/sh
              ln -s /usr/bin/dash /usr/bin/sh
            fi
            if [ -L "/bin/sh" ]; then
              rm -f /bin/sh
              ln -s /usr/bin/dash /bin/sh
            fi
          fi
          if [ -x "/bin/dash" ] && [ ! -L "/bin/dash" ]; then
            if [ -L "/usr/bin/sh" ]; then
              rm -f /usr/bin/sh
              ln -s /bin/dash /usr/bin/sh
            fi
            if [ -L "/bin/sh" ]; then
              rm -f /bin/sh
              ln -s /bin/dash /bin/sh
            fi
          fi
        fi
      elif [ -x "/bin/bash" ] || [ -x "/usr/bin/bash" ]; then
        if [ "${_WEB_SH}" != "/bin/bash" ]; then
          if [ -x "/usr/bin/bash" ] && [ ! -L "/usr/bin/bash" ]; then
            if [ -L "/usr/bin/sh" ]; then
              rm -f /usr/bin/sh
              ln -s /usr/bin/bash /usr/bin/sh
            fi
            if [ -L "/bin/sh" ]; then
              rm -f /bin/sh
              ln -s /usr/bin/bash /bin/sh
            fi
          fi
          if [ -x "/bin/bash" ] && [ ! -L "/bin/bash" ]; then
            if [ -L "/usr/bin/sh" ]; then
              rm -f /usr/bin/sh
              ln -s /bin/bash /usr/bin/sh
            fi
            if [ -L "/bin/sh" ]; then
              rm -f /bin/sh
              ln -s /bin/bash /bin/sh
            fi
          fi
        fi
      fi
    fi
    touch $PIDFILE
    if [ -e "/var/run/boa_wait.pid" ]; then
      rm -f /var/run/boa_wait.pid
      echo "$NAME 1 done."
    else
      echo "$NAME 1 nothing to do."
    fi
    if [ -e "/var/run/boa_run.pid" ]; then
      rm -f /var/run/boa_run.pid
      echo "$NAME 2 done."
    else
      echo "$NAME 2 nothing to do."
    fi
    if [ -e "/var/run/manage_ltd_users.pid" ]; then
      rm -f /var/run/manage_ltd_users.pid
      echo "$NAME 3 done."
    else
      echo "$NAME 3 nothing to do."
    fi
    if [ -e "/var/run/daily-fix.pid" ]; then
      rm -f /var/run/daily-fix.pid
      echo "$NAME 4 done."
    else
      echo "$NAME 4 nothing to do."
    fi
    if [ -e "/var/run/boa_cron_wait.pid" ]; then
      rm -f /var/run/boa_cron_wait.pid
      echo "$NAME 5 done."
    else
      echo "$NAME 5 nothing to do."
    fi
  ;;
  stop)
    echo -n "Stopping $DESC: "
    if [ ! -e "/root/.run-auto-major-os-reboot-one.cnf" ] \
      && [ ! -e "/root/.run-auto-major-os-reboot-two.cnf" ]; then
      service cron stop &> /dev/null
      sleep 60
      kill -9 $(ps aux | grep '[a]vahi-daemon' | awk '{print $2}') &> /dev/null
      kill -9 $(ps aux | grep '[c]lamd' | awk '{print $2}') &> /dev/null
      kill -9 $(ps aux | grep '[f]reshclam' | awk '{print $2}') &> /dev/null
      kill -9 $(ps aux | grep '[j]ava' | awk '{print $2}') &> /dev/null
      kill -9 $(ps aux | grep '[s]econd.sh' | awk '{print $2}') &> /dev/null
      sleep 15
      kill -9 $(ps aux | grep '[s]econd.sh' | awk '{print $2}') &> /dev/null
      sleep 15
      service nginx stop &> /dev/null
      _PHP_V="82 81 74 73 72 71 70 56"
      for e in ${_PHP_V}; do
        if [ -e "/etc/init.d/php${e}-fpm" ]; then
          service php${e}-fpm force-quit &> /dev/null
        fi
      done
      kill -9 $(ps aux | grep '[p]hp-fpm' | awk '{print $2}') &> /dev/null
    fi
    if [ -x "/bin/websh" ] && [ -L "/bin/sh" ]; then
      _WEB_SH=`readlink -n /bin/sh`
      _WEB_SH=`echo -n $_WEB_SH | tr -d "\n"`
      if [ -x "/bin/dash" ]; then
        if [ "$_WEB_SH" != "/bin/dash" ]; then
          rm -f /bin/sh
          ln -s /bin/dash /bin/sh
          if [ -e "/usr/bin/sh" ]; then
            rm -f /usr/bin/sh
            ln -s /bin/dash /usr/bin/sh
          fi
        fi
      else
        if [ "$_WEB_SH" != "/bin/bash" ]; then
          rm -f /bin/sh
          ln -s /bin/bash /bin/sh
          if [ -e "/usr/bin/sh" ]; then
            rm -f /usr/bin/sh
            ln -s /bin/bash /usr/bin/sh
          fi
        fi
      fi
    fi
    if [ -e "/var/run/boa_wait.pid" ]; then
      rm -f /var/run/boa_wait.pid
      echo "$NAME done."
    else
      echo "$NAME nothing to do."
    fi
    if [ -e "/var/run/boa_run.pid" ]; then
      rm -f /var/run/boa_run.pid
      echo "$NAME 2 done."
    else
      echo "$NAME 2 nothing to do."
    fi
    if [ -e "/var/run/manage_ltd_users.pid" ]; then
      rm -f /var/run/manage_ltd_users.pid
      echo "$NAME 3 done."
    else
      echo "$NAME 3 nothing to do."
    fi
    if [ -e "/var/run/daily-fix.pid" ]; then
      rm -f /var/run/daily-fix.pid
      echo "$NAME 4 done."
    else
      echo "$NAME 4 nothing to do."
    fi
    if [ -e "/var/run/boa_cron_wait.pid" ]; then
      rm -f /var/run/boa_cron_wait.pid
      echo "$NAME 5 done."
    else
      echo "$NAME 5 nothing to do."
    fi
    rm -f $PIDFILE
  ;;

  restart|force-reload)
    ${0} stop
    ${0} start
  ;;

  status)
    echo -n "$DESC status: "
    if [ -e "/var/run/boa_wait.pid" ]; then
      echo "fail 1"
    else
      echo "OK 1"
      exit 0
    fi
    if [ -e "/var/run/boa_run.pid" ]; then
      echo "fail 2"
    else
      echo "OK 2"
      exit 0
    fi
  ;;

  *)
    echo "Usage: service $NAME {start|stop|restart|force-reload}" >&2
    exit 0
  ;;
esac

exit 0
